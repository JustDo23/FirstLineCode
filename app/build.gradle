apply plugin: 'com.android.application'// 应用一个插件
// com.android.application 表示这是一个应用程序模块[可直接运行]
// com.android.library 表示这是一个库模块[作为代码库]

android {
  compileSdkVersion 25// 编译版本
  buildToolsVersion "25.0.2"// 构建工具版本
  defaultConfig {// 默认配置
    applicationId "com.just.first"// 指定项目包名
    minSdkVersion 14// 最低兼容的 Android 系统版本
    targetSdkVersion 25// 目标版本 启用相应版本上的新功能新特性
    versionCode 1// 项目版本号
    versionName "1.0"// 项目版本名称
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"// 测试需要
    jackOptions.enabled = true;// 支持 Lambda 表达式
  }
  signingConfigs {// 默认配置
    config {
      storeFile file(KEY_PATH)// 签名文件路径
      storePassword KEY_PASS// 签名密码
      keyAlias ALIAS_NAME// 签名别名
      keyPassword ALIAS_PASS// 别名密码
    }
  }
  compileOptions {// 编译选项
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  buildTypes {// 构建类型
    release {// 发布
      minifyEnabled false// 是否对代码进行混淆
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      // proguardFiles 指定混淆时使用的规则文件
      // proguard-android.txt 在 Android SDK 目录下的通用混淆规则
      // proguard-rules.pro 在当前项目的根目录下 自己编写特定的混淆规则
      signingConfig signingConfigs.config// 指定之前的签名配置
    }
  }
//  productFlavors {// 多渠道配置
//    air {// air
//      applicationId "com.just.first"
//    }
//    qihoo {// 奇虎360
//      applicationId "com.just.first.qihoo"
//    }
//    baidu {//  百度
//      applicationId "com.just.first.baidu"
//    }
//  }
}

dependencies {// 依赖库 [本地依赖][库依赖][远程依赖]
  compile fileTree(include: ['*.jar'], dir: 'libs')// 本地依赖
  androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })// Android 测试
  compile 'com.android.support:appcompat-v7:25.3.1'
  // com.android.support 是域名部分 用于和其他公司的库做区分
  // appcompat-v7 是组名称 用于和同一公司中不同的库做区分
  // 25.3.1 是版本号 用户和同一库不同的版本做区分
  testCompile 'junit:junit:4.12'// 测试依赖
  compile 'com.android.support:recyclerview-v7:25.3.1'// 远程依赖

  // Gradle 在构建项目时会首先检查一下本地是否已经有这个库的缓存，如果没有的话则会去自动联网下载，然后再添加到项目的构建路径当中。

  compile 'com.android.support:percent:25.3.1'// 百分比布局
  compile 'com.android.support:design:25.3.1'// Material Design
  compile 'com.android.support:cardview-v7:25.3.1'// 卡片式布局
  compile 'de.hdodenhof:circleimageview:2.1.0'// 圆形 ImageView
  compile 'org.litepal.android:core:1.5.1'// LitePal 数据库
  compile 'com.squareup.okhttp3:okhttp:3.4.1'// OKHttp
  compile 'com.google.code.gson:gson:2.8.1'// Gson
  compile 'com.github.bumptech.glide:glide:4.0.0'// Glide
  annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0'
}
